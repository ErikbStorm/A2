}
library(car)
influencePlot(int_dist, geo_dist)
library(car)
car::influencePlot(int_dist ~ geo_dist, id.method = 'identify')
library(car)
car::influencePlot(int_dist , geo_dist, id.method = 'identify')
int_dist = c(57,55,58,58,56,50,39,40,20,18,34,17,22,41,51,72,57)
geo_dist = c(100,89,90,88,85,70,59,52,23,25,52,14,40,67,79,62,95)
library(car)
car::influencePlot(int_dist , geo_dist, id.method = 'identify')
library(car)
car::influencePlot(int_dist ~ geo_dist, id.method = 'identify')
library(car)
comb_data$geo_dist = geo_dist
library(car)
comb_data
View(mydata)
View(mydata)
library(car)
comb_data = matrix()
comb_data$geo_dist = geo_dist
comb_data$int_dist = int_dist
car::influencePlot(int_dist ~ geo_dist, id.method = 'identify')
library(car)
comb_data = matrix()
comb_data$geo_dist = geo_dist
comb_data$int_dist = int_dist
car::influencePlot(comb_data, id.method = 'identify')
View(mydata)
type(mydata)
mydata
str(mydata)
library(car)
comb_data = data.frame()
comb_data$geo_dist = geo_dist
library(car)
comb_data = data.frame()
comb_data$geo_dist = geo_dist
library(car)
comb_data = data.frame()
comb_data$geo_dist <- geo_dist
library(car)
comb_data = data.frame(geo_dist, int_dist)
car::influencePlot(comb_data, id.method = 'identify')
library(car)
comb_data = data.frame(geo_dist, int_dist)
car::influencePlot(comb_data$int_dist ~ comb_data$geo_dist, id.method = 'identify')
library(car)
comb_data = data.frame(geo_dist, int_dist)
car::influencePlot(m, id.method = 'identify')
library(car)
comb_data = data.frame(geo_dist, int_dist)
car::influencePlot(id.method = 'identify')
library(car)
comb_data = data.frame(geo_dist, int_dist)
car::influencePlot(m, id.method = 'identify')
library(car)
comb_data = data.frame(geo_dist, int_dist)
model <- lm(int_dist ~ geo_dist)
car::influencePlot(model, id.method = 'identify')
library(car)
comb_data = data.frame(geo_dist, int_dist)
model <- lm(int_dist ~ geo_dist)
car::influencePlot(model)
model2 <- lm(geo_dist ~ int_dist)
summary(model2)
model2 <- lm(int_dist ~ geo_dist)
summary(model2)
model2 <- lm(geo_dist ~ int_dist)
summary(model2)
model2 <- lm(geo_dist ~ int_dist)
b1 = cor(geo_dist, int_dist) * sd(geo_dist) / sd(int_dist) # 0.55
b0 = mean(geo_dist) - b1 * mean(int_dist) # 8.83
b1
bo
model2 <- lm(geo_dist ~ int_dist)
b1 = cor(geo_dist, int_dist) * sd(geo_dist) / sd(int_dist) # 0.55
b0 = mean(geo_dist) - b1 * mean(int_dist) # 8.83
b1
b0
summary(model2)
model2 <- lm(geo_dist ~ int_dist)
b1 = cor(geo_dist, int_dist) * sd(geo_dist) / sd(int_dist) # 0.55
b0 = mean(geo_dist) - b1 * mean(int_dist) # 8.83
b1
b0
confint(lm(geo_dist ~ int_dist))
summary(model2)
model2 <- lm(geo_dist ~ int_dist)
b1 = cor(geo_dist, int_dist) * sd(geo_dist) / sd(int_dist) # 0.55
b0 = mean(geo_dist) - b1 * mean(int_dist) # 8.83
b1
b0
confint(lm(geo_dist ~ int_dist))
summary(model2)$coefficients
ggplot2::ggplot(int_dist ~ geo_dist)
ggplot2::ggplot(int_dist, geo_dist)
ggplot2::ggplot(int_dist, geo_dist)
ggplot2::ggplot(model2)
ggplot2::ggplot(model2, aes(geo_dist, int_dist))
library(ggplot2)
ggplot(model2, aes(geo_dist, int_dist))
library(plotly)
library(ggplot2)
ggplot(model2, aes(geo_dist, int_dist))
View(comb_data)
library(ggplot2)
ggplot(comb_data, aes(geo_dist, int_dist))
library(ggplot2)
ggplot(data = comb_data, mapping = aes(hoi, hoih))
library(ggplot2)
ggplot(data = comb_data, mapping = aes(geo_dist, int_dist))
library(ggplot2)
ggplot(mapping = aes(geo_dist, int_dist))
library(ggplot2)
ggplot(comb_data, aes(geo_dist, int_dist))
library(ggplot2)
ggplot(comb_data, aes(int_dist, geo_dist))
library(ggplot2)
plot(comb_data)
ggplot(comb_data, aes(geo_dist, int_dist))
library(ggplot2)
plot(comb_data)
ggplot(comb_data)
library(ggplot2)
plot(comb_data)
ggplot(comb_data, aes(geo_dist, int_dist))
library(ggplot2)
plot(comb_data)
ggplot(comb_data, aes(int_dist, geo_dist))
library(ggplot2)
plot(comb_data)
ggplot(comb_data, aes(int_dist, geo_dist)) + geom_point()
library(ggplot2)
plot(comb_data)
ggplot(comb_data, aes(int_dist, geo_dist)) + geom_point() + stat_smooth()
library(ggplot2)
comb_data <- data.frame(int_dist, geo_dist)
ggplot(comb_data, aes(int_dist, geo_dist)) + geom_point() + stat_smooth()
View(comb_data)
ncvTest(lm(int_dist ~ geo_dist))
model1 <- lm(int_dist ~ geo_dist)
ncvTest(model1)
durbinWatsonTest(model1)
model1 <- lm(int_dist ~ geo_dist)
ncvTest(model1)
durbinWatsonTest(model1)
model1 <- lm(int_dist ~ geo_dist)
#ncvtest
ncvTest(model1)
#durbin test
durbinWatsonTest(model1)
x <- c(1,2,5,8,9)
y <- c(5,4,2,2,2)
cor.test(y ~ x, method='pearson')
cor.test(y, x, method='pearson')
7/5
176 - 0.7*74
124.2 + 0.7*86
knitr::opts_chunk$set(echo = TRUE)
packages <- c("rms")
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())), repos='http://cran.us.r-project.org')
}
library(rms) #needed for lrm()
# create the variables
status <- c(rep("upper", 36), rep("middle", 94), rep("lower", 54))
outcome <- c(rep("r", 30), rep("schwa", 6), rep("r", 20), rep("schwa", 74), rep("r", 4), rep("schwa", 50))
# create the data frame
ny.data <- data.frame(outcome, status)
table(ny.data) # this should show the same table as the one in slide 7
status <- relevel(status, ref = 'lower')
status <- as.factor(status)
outcome <- as.factor(outcome)
str(ny.data)
status <- relevel(status, ref = 'lower')
outcome <- relevel(outcome, ref = 'schwa')
str(ny.data)
status <- as.factor(status)
outcome <- as.factor(outcome)
str(ny.data)
status <- relevel(status, ref = 'lower')
outcome <- relevel(outcome, ref = 'schwa')
str(ny.data)
View(ny.data)
status <- relevel(status, ref = 'lower')
outcome <- relevel(outcome, ref = 'schwa')
str(ny.data)
lrm_model <- lrm(outcome ~ status, data = ny.data)
lrm_model
4/54
1 - plogis(2.5257)
lrm_model
validate(lrm_model, B = 200)
lrm_model
status <- relevel(status, ref = 'lower')
outcome <- relevel(outcome, ref = 'schwa')
str(ny.data)
status <- relevel(status, ref = 'lower')
outcome <- relevel(outcome, ref = 'schwa')
str(status)
status <- relevel(status, ref = 'lower')
outcome <- relevel(outcome, ref = 'schwa')
str(status)
status <- as.factor(status)
outcome <- as.factor(outcome)
is.factor(status)
status <- as.factor(status)
outcome <- as.factor(outcome)
is.factor(status)
is.factor(outcome)
knitr::opts_chunk$set(echo = TRUE)
packages <- c("jtools", "lme4", "visreg")
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())), repos='http://cran.us.r-project.org')
}
library(jtools)
library(lme4)
library(visreg)
df <- read.csv("lab6_temperature.csv")
str(df)
df$Coastal <- as.factor(df$Coastal)
str(df)
df$Coastal <- relevel(df$Coastal, ref="0")
df$Year <- as.factor(df$Year)
str(df)
df$Year <- as.factor(df$Year)
str(df)
df$temp_res <- (df$Temperature - mean(df$Temperature)) / 1000
df$temp_res
df <- read.csv("lab6_temperature.csv")
str(df)
df$Coastal <- as.factor(df$Coastal)
str(df)
df$Coastal <- relevel(df$Coastal, ref="0")
df$Year <- as.factor(df$Year)
str(df)
df <- read.csv("lab6_temperature.csv")
str(df)
df$Coastal <- as.factor(df$Coastal)
str(df)
df$Coastal <- relevel(df$Coastal, ref="0")
df$Year <- as.factor(df$Year)
str(df)
df <- read.csv("lab6_temperature.csv")
str(df)
df$Coastal <- as.factor(df$Coastal)
str(df)
df$Coastal <- relevel(df$Coastal, ref="0")
df$Year <- as.factor(df$Year)
str(df)
df$lat_res <- (df$Latitude - mean(df$Latitude)) / 1000
df$long_res <- (df$Longitude - mean(df$Longitude)) / 1000
df$lat_res
df$long_res
df$lat_res <- (df$Latitude - mean(df$Latitude)) / 1000
df$long_res <- (df$Longitude - mean(df$Longitude)) / 1000
head(df)
par(mfrow=c(1,2))
qqplot(Temperature ~ City,data=df)
par(mfrow=c(1,2))
qqplot(x = Temperature, y = City,data=df)
par(mfrow=c(1,2))
qqplot(x = df$Temperature, y = df$City)
par(mfrow=c(1,2))
qqplot(x = df$City, y = df$Temperature)
par(mfrow=c(1,2))
qqplot(x = df$City, y = df$Temperature)
qqline()
par(mfrow=c(1,2))
qqplot(x = df$City, y = df$Temperature)
abline()
par(mfrow=c(1,2))
qqplot(x = df$City, y = df$Temperature)
qqline(df$city, df$Temperature)
par(mfrow=c(1,2))
boxplot(Temperature ~ City,data= df)
par(mfrow=c(1,2))
boxplot(Temperature ~ City,data= df)
boxplot(Temperature ~ Year,data= df)
df$lat_res <- (df$Latitude - mean(df$Latitude))
df$long_res <- (df$Longitude - mean(df$Longitude))
df$elev_res <- (df$Elevation - mean(df$Elevation)) / 1000
head(df)
df$lat_res <- c(scale(df$Latitude))
df$long_res <- c(scale(df$Longitude))
df$elev_res <- (df$Elevation - mean(df$Elevation)) / 1000
head(df)
df$lat_res <- c(scale(df$Latitude))
df$long_res <- c(scale(df$Longitude))
df$elev_res <- c(scale(df$Elevation)) / 1000
head(df)
lmer_m <- lmer(Temperature ~ lat_res + long_res + Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m
lmer_m <- lmer(Temperature ~ lat_res + long_res + Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m$coefficients
lmer_m <- lmer(Temperature ~ lat_res + long_res + Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
summary(lmer_m)$coefficients
df$lat_res <- c(scale(df$Latitude))
df$long_res <- c(scale(df$Longitude))
df$elev_res <- df$Elevation / 1000
head(df)
lmer_m <- lmer(Temperature ~ lat_res + long_res + Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
summary(lmer_m)$coefficients
df$lat_res <- c(scale(df$Latitude))
df$long_res <- c(scale(df$Longitude))
df$elev_res <- c(scale(df$Elevation)) / 1000
head(df)
lmer_m <- lmer(Temperature ~ lat_res + long_res + Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
summary(lmer_m)$coefficients
lmer_m1 <- lmer(Temperature ~ lat_res + long_res + Coastal * elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m2 <- lmer(Temperature ~ lat_res + long_res * Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m3 <- lmer(Temperature ~ long_res + lat_res * Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m4 <- lmer(Temperature ~ long_res + lat_res * elev_res + Coastal + (1|City) + (1|Year),df, REML=F)
lmer_m5 <- lmer(Temperature ~ long_res * elev_res + lat_res + Coastal + (1|City) + (1|Year),df, REML=F)
AIC(lmer_m) - AIC(lmer_m1)
lmer_m1 <- lmer(Temperature ~ lat_res + long_res + Coastal * elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m2 <- lmer(Temperature ~ lat_res + long_res * Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m3 <- lmer(Temperature ~ long_res + lat_res * Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m4 <- lmer(Temperature ~ long_res + lat_res * elev_res + Coastal + (1|City) + (1|Year),df, REML=F)
lmer_m5 <- lmer(Temperature ~ long_res * elev_res + lat_res + Coastal + (1|City) + (1|Year),df, REML=F)
AIC(lmer_m2) - AIC(lmer_m1)
lmer_m1 <- lmer(Temperature ~ lat_res + long_res + Coastal + elev_res + (1|City) + (1|Year) + Coastal * elev_res,df, REML=F)
lmer_m2 <- lmer(Temperature ~ lat_res + long_res * Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m3 <- lmer(Temperature ~ long_res + lat_res * Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m4 <- lmer(Temperature ~ long_res + lat_res * elev_res + Coastal + (1|City) + (1|Year),df, REML=F)
lmer_m5 <- lmer(Temperature ~ long_res * elev_res + lat_res + Coastal + (1|City) + (1|Year),df, REML=F)
AIC(lmer_m2) - AIC(lmer_m1)
lmer_m1 <- lmer(Temperature ~ lat_res + long_res + Coastal + elev_res + (1|City) + (1|Year) + Coastal * elev_res,df, REML=F)
lmer_m2 <- lmer(Temperature ~ lat_res + long_res + Coastal + elev_res + (1|City) + (1|Year + long_res * Coastal),df, REML=F)
lmer_m1 <- lmer(Temperature ~ lat_res + long_res + Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m2 <- lmer(Temperature ~ lat_res + long_res * Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m3 <- lmer(Temperature ~ long_res + lat_res * Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m4 <- lmer(Temperature ~ long_res + lat_res * elev_res + Coastal + (1|City) + (1|Year),df, REML=F)
lmer_m5 <- lmer(Temperature ~ long_res * elev_res + lat_res + Coastal + (1|City) + (1|Year),df, REML=F)
AIC(lmer_m2) - AIC(lmer_m1)
lmer_m1 <- lmer(Temperature ~ lat_res + long_res + Coastal * elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m2 <- lmer(Temperature ~ lat_res + long_res * Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m3 <- lmer(Temperature ~ long_res + lat_res * Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m4 <- lmer(Temperature ~ long_res + lat_res * elev_res + Coastal + (1|City) + (1|Year),df, REML=F)
lmer_m5 <- lmer(Temperature ~ long_res * elev_res + lat_res + Coastal + (1|City) + (1|Year),df, REML=F)
AIC(lmer_m2) - AIC(lmer_m1)
lmer_m1 <- lmer(Temperature ~ lat_res + long_res + Coastal * elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m2 <- lmer(Temperature ~ lat_res + long_res * Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m3 <- lmer(Temperature ~ long_res + lat_res * Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m4 <- lmer(Temperature ~ long_res + lat_res * elev_res + Coastal + (1|City) + (1|Year),df, REML=F)
lmer_m5 <- lmer(Temperature ~ long_res * elev_res + lat_res + Coastal + (1|City) + (1|Year),df, REML=F)
AIC(lmer_m2) - AIC(lmer_m3)
lmer_m1 <- lmer(Temperature ~ lat_res + long_res + Coastal * elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m2 <- lmer(Temperature ~ lat_res + long_res * Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m3 <- lmer(Temperature ~ long_res + lat_res * Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m4 <- lmer(Temperature ~ long_res + lat_res * elev_res + Coastal + (1|City) + (1|Year),df, REML=F)
lmer_m5 <- lmer(Temperature ~ long_res * elev_res + lat_res + Coastal + (1|City) + (1|Year),df, REML=F)
AIC(lmer_m1) - AIC(lmer_m3)
lmer_m1 <- lmer(Temperature ~ lat_res + long_res + Coastal * elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m2 <- lmer(Temperature ~ lat_res + long_res * Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m3 <- lmer(Temperature ~ long_res + lat_res * Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
lmer_m4 <- lmer(Temperature ~ long_res + lat_res * elev_res + Coastal + (1|City) + (1|Year),df, REML=F)
lmer_m5 <- lmer(Temperature ~ long_res * elev_res + lat_res + Coastal + (1|City) + (1|Year),df, REML=F)
AIC(lmer_m1) - AIC(lmer_m4)
lmer_m1 <- lmer(Temperature ~ Coastal * elev_res, df, REML=F)
knitr::opts_chunk$set(echo = TRUE)
packages <- c("jtools", "lme4", "visreg")
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())), repos='http://cran.us.r-project.org')
}
library(jtools)
library(lme4)
library(visreg)
knitr::opts_chunk$set(echo = TRUE)
packages <- c("jtools", "lme4", "visreg")
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())), repos='http://cran.us.r-project.org')
}
library(jtools)
library(lme4)
library(visreg)
df <- read.csv("lab6_temperature.csv")
str(df)
df$Coastal <- as.factor(df$Coastal)
str(df)
df$Coastal <- relevel(df$Coastal, ref="0")
df$Year <- as.factor(df$Year)
str(df)
df$lat_res <- c(scale(df$Latitude))
df$long_res <- c(scale(df$Longitude))
df$elev_res <- c(scale(df$Elevation)) / 1000
head(df)
par(mfrow=c(1,2))
boxplot(Temperature ~ City,data= df)
boxplot(Temperature ~ Year,data= df)
lmer_m <- lmer(Temperature ~ lat_res + long_res + Coastal + elev_res + (1|City) + (1|Year),df, REML=F)
summary(lmer_m)$coefficients
lmer_m1 <- lmer(Temperature ~ Coastal * elev_res + Coastal * lat_res + Coastal * long_res + elev_res * lat_res + elev_res * long_res + long_res + lat_res + (1|City) + (1|Year), df, REML = F)
AIC(lmer_m) - AIC(lmer_m1)
lmer_m1 <- lmer(Temperature ~ Coastal * elev_res + Coastal * lat_res + Coastal * long_res + elev_res * lat_res + elev_res * long_res + long_res + lat_res + (1|City) + (1|Year), df, REML = F)
summary(lmer_m1)$coefficients
AIC(lmer_m) - AIC(lmer_m1)
lmer_m1 <- lmer(Temperature ~ Coastal * elev_res + Coastal * lat_res + Coastal * long_res + elev_res * lat_res + elev_res * long_res + long_res + lat_res + (1|City) + (1|Year), df, REML = F)
summary(lmer_m1)$coefficients
AIC(lmer_m) - AIC(lmer_m1)
lmer_m1 <- lmer(Temperature ~ Coastal * elev_res + Coastal * lat_res + Coastal * long_res + elev_res * long_res + long_res + lat_res + (1|City) + (1|Year), df, REML = F)
AIC(lmer_m) - AIC(lmer_m1)
lmer_m1 <- lmer(Temperature ~ Coastal * elev_res + Coastal * lat_res + Coastal * long_res + elev_res * lat_res + elev_res * long_res + long_res + lat_res + (1|City) + (1|Year), df, REML = F)
summary(lmer_m1)$coefficients
AIC(lmer_m) - AIC(lmer_m1)
lmer_m1_improved <- lmer(Temperature ~ Coastal * elev_res + Coastal * lat_res + Coastal * long_res + elev_res * long_res + long_res + lat_res + (1|City) + (1|Year), df, REML = F)
AIC(lmer_m1) - AIC(lmer_m1_improved)
lmer_m1 <- lmer(Temperature ~ Coastal * elev_res + Coastal * lat_res + Coastal * long_res + elev_res * lat_res + elev_res * long_res + long_res + lat_res + (1|City) + (1|Year), df, REML = F)
summary(lmer_m1)$coefficients
AIC(lmer_m) - AIC(lmer_m1)
lmer_m1_improved <- lmer(Temperature ~ Coastal * elev_res + Coastal * lat_res + Coastal * long_res + elev_res * long_res + long_res + (1|City) + (1|Year), df, REML = F)
AIC(lmer_m1) - AIC(lmer_m1_improved)
interact_plot(lmer_m1, pred="lat_res", modx="Coastal")
knitr::opts_chunk$set(echo = TRUE)
packages <- c("jtools", "lme4", "visreg")
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())), repos='http://cran.us.r-project.org')
}
library(jtools)
library(lme4)
library(visreg)
interact_plot(lmer_m1, pred="lat_res", modx="Coastal")
library(interactions)
interact_plot(lmer_m1, pred="lat_res", modx="Coastal")
library(interactions)
interact_plot(lmer_m1_improved, pred="lat_res", modx="Coastal")
interact_plot(lmer_m1, pred="elev_res", modx="Coastal")
library(interactions)
interact_plot(lmer_m1, pred="lat_res", modx="Coastal")
interact_plot(lmer_m1, pred="elev_res", modx="Coastal")
plot(fitted(lmer_m1, resid(lmer_m1)))
plot(fitted(lmer_m1), resid(lmer_m1))
plot(fitted(lmer_m1), resid(lmer_m1))
qqplot(resid(lmer_m1))
plot(fitted(lmer_m1), resid(lmer_m1))
qqp(resid(lmer_m1))
plot(fitted(lmer_m1), resid(lmer_m1))
plot(resid(lmer_m1))
plot(fitted(lmer_m1), resid(lmer_m1))
qqplot(resid(lmer_m1))
#remove outliers
df_no = df[abs(scale(resid(lmer1))) < 2,]
#remove outliers
df_no = df[abs(scale(resid(lmer_m1))) < 2,]
#number removed
dim(df_no) - dim(df)
#percentage removed
1 - (dim(df_no) / dim(df))
lmer_no = lmer(Temperature ~ Coastal + lat_res + long_res + elev_res + (1|City) + (1|Year), df_no, REML = F)
summary(lmer_no)
#remove outliers
df_no = df[abs(scale(resid(lmer_m1))) < 2,]
#number removed
dim(df_no) - dim(df)
#percentage removed
(1 - (dim(df_no) / dim(df))) * 100
lmer_no = lmer(Temperature ~ Coastal + lat_res + long_res + elev_res + (1|City) + (1|Year), df_no, REML = F)
summary(lmer_no)
#remove outliers
df_no = df[abs(scale(resid(lmer_m1))) < 2,]
#number removed
dim(df_no) - dim(df)
#percentage removed
(1 - (dim(df_no) / dim(df))) * 100 #0.23%
lmer_no = lmer(Temperature ~ Coastal + lat_res + long_res + elev_res + (1|City) + (1|Year), df_no, REML = F)
summary(lmer_no)
AIC(lmer_m1) - AIC(lmer_no)
plot(fitted(lmer_m1), resid(lmer_m1))
plot(fitted(lmer_m1), resid(lmer_m1))
cor(df$lat_res, df$long_res)
cor(df$lat_res, df$elev_res)
cor(df$long_res, df$elev_res)
df
str(df)
df
str(df)
str(df)
str(def)
def <- read.csv("dataset.csv", sep=";");
def <- read.csv2("dataset.csv", sep=";");
setwd("~/")
setwd("C:\School\Social Media\Assignment 2")
setwd("\School\Social Media\Assignment 2")
setwd("School\Social Media\Assignment 2")
setwd("C:/School/Social Media/Assignment 2")
def <- read.csv("dataset.csv", sep=";");
str(def);
lmer <- lmer(Duration ~ TURNTYPE, (), data=def);
lmer <- lmer(Duration ~ TURNTYPE + (1|dyadid), data=def);
library(jtools)
library(lme4)
library(visreg)
lmer <- lmer(Duration ~ TURNTYPE + (1|dyadid), data=def);
#Happiness
barplot(c(0.036, 0.044), main="Happiness per Interface", ylab='Happiness per turn', names.arg = c("WYSIWYG", "TBT"), col = c("darkblue", "lightblue"), ylim = c(0,0.04))
#Emotional change per line
barplot(c(0.0874, 0.103), main="Emotional Change per Interface", ylab='Emotional change per turn', names.arg = c("WYSIWYG", "TBT"), col = c("darkblue", "lightblue"), ylim = c(0,0.1))
#Happiness
barplot(c(0.036, 0.044), main="Happiness per Interface", ylab='Happiness per turn', names.arg = c("WYSIWYG", "TBT"), col = c("darkblue", "lightblue"), ylim = c(0,0.04))
#Emotional change per line
barplot(c(0.0874, 0.103), main="Emotional Change per Interface", ylab='Emotional change per turn', names.arg = c("WYSIWYG", "TBT"), col = c("darkblue", "lightblue"), ylim = c(0,0.11))
#Happiness
barplot(c(0.036, 0.044), main="Happiness per Interface", ylab='Happiness per turn', names.arg = c("WYSIWYG", "TBT"), col = c("darkblue", "lightblue"), ylim = c(0,0.05))
#Emotional change per line
barplot(c(0.0874, 0.103), main="Emotional Change per Interface", ylab='Emotional change per turn', names.arg = c("WYSIWYG", "TBT"), col = c("darkblue", "lightblue"), ylim = c(0,0.11))
#Happiness
barplot(c(0.036, 0.044), main="Happiness per Interface", ylab='Average happiness per turn', names.arg = c("WYSIWYG", "TBT"), col = c("darkblue", "lightblue"), ylim = c(0,0.05))
#Emotional change per line
barplot(c(0.0874, 0.103), main="Emotional Change per Interface", ylab='Average emotional change per turn', names.arg = c("WYSIWYG", "TBT"), col = c("darkblue", "lightblue"), ylim = c(0,0.11))
0.103 - 0.087
